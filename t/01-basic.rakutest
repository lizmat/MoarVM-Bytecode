use Test;
use MoarVM::Bytecode;

plan 11;

my str $setting = "c";
my $M := MoarVM::Bytecode.new($setting);
is $M.version,   7,     "Is it the correct version";
is $M.hll-name, "Raku", "Is it the correct HLL";

my @frames := $M.frames.reify-all;
is @frames.elems, $M.frames.elems, "did we get all frames";

my @files = $M.files;
ok @files.elems, "did we find any bytecode files";

subtest "Check all known bytecode files" => {
    plan @files + 1;

    my %hll-names;

    for @files {
        ok (my $m := MoarVM::Bytecode.new($_)), $_;
        %hll-names{$m.hll-name}++;
    }

    is %hll-names.elems, 2, 'Did we see 2 HLL names';
}

is $M.strings.elems, $M.string-heap-entries,
  "Found $M.strings.elems() strings in $setting setting";
is $M.sc-dependencies.elems, $M.sc-dependencies-entries,
  "Found $M.sc-dependencies.elems() sc dependencies in $setting setting";
is $M.extension-ops.elems, $M.extension-ops-entries,
  "Found $M.extension-ops.elems() extension ops in $setting setting";
is $M.frames.elems, $M.frames-data-entries,
  "Found $M.frames.elems() frames in $setting setting";
is $M.callsites.elems, $M.callsites-data-entries,
  "Found $M.callsites.elems() callsites in $setting setting";

ok $M.ops.elems > 0, 'Did we get ops info';

# vim: expandtab shiftwidth=4
